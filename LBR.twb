<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1108.0821                               -->
<workbook original-version='18.1' source-build='2022.3.1 (20223.22.1108.0821)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <GroupAction />
    <_.fcp.GroupActionAddRemove.true...GroupActionAddRemove />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
        <calculation class='tableau' formula='&quot;day&quot;' />
        <members>
          <member value='&quot;day&quot;' />
          <member value='&quot;week&quot;' />
          <member value='&quot;month&quot;' />
        </members>
      </column>
      <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='2'>
        <calculation class='tableau' formula='2' />
      </column>
    </datasource>
    <datasource caption='Data (london_bikes_final)' inline='true' name='federated.13icwq50b7cei81c8ef1l1w7gh9c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='london_bikes_final' name='excel-direct.1sp26i31h2ny7i1dsr5lp1btl1hc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/shriy/Downloads/london_bikes_final.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1sp26i31h2ny7i1dsr5lp1btl1hc' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count_of_bikes' ordinal='2' />
            <column datatype='real' name='Real_Temperature' ordinal='3' />
            <column datatype='real' name='Feels_Like_Temperature' ordinal='4' />
            <column datatype='real' name='Humidity_Percentage' ordinal='5' />
            <column datatype='real' name='Wind_Speed_kph' ordinal='6' />
            <column datatype='string' name='Weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='Season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1sp26i31h2ny7i1dsr5lp1btl1hc' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count_of_bikes' ordinal='2' />
            <column datatype='real' name='Real_Temperature' ordinal='3' />
            <column datatype='real' name='Feels_Like_Temperature' ordinal='4' />
            <column datatype='real' name='Humidity_Percentage' ordinal='5' />
            <column datatype='real' name='Wind_Speed_kph' ordinal='6' />
            <column datatype='string' name='Weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='Season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K17415:no:A1:K17415:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_9791E6FB86094462BDCD47003BF8B87F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_9791E6FB86094462BDCD47003BF8B87F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count_of_bikes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count_of_bikes]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>count_of_bikes</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_9791E6FB86094462BDCD47003BF8B87F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Real_Temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Real_Temperature]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Real_Temperature</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_9791E6FB86094462BDCD47003BF8B87F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Feels_Like_Temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Feels_Like_Temperature]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Feels_Like_Temperature</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_9791E6FB86094462BDCD47003BF8B87F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Humidity_Percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Humidity_Percentage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Humidity_Percentage</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_9791E6FB86094462BDCD47003BF8B87F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind_Speed_kph</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wind_Speed_kph]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Wind_Speed_kph</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_9791E6FB86094462BDCD47003BF8B87F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weather</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Weather]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Weather</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_9791E6FB86094462BDCD47003BF8B87F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_holiday]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>is_holiday</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_9791E6FB86094462BDCD47003BF8B87F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_weekend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_weekend]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>is_weekend</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_9791E6FB86094462BDCD47003BF8B87F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_9791E6FB86094462BDCD47003BF8B87F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Moving Average Rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([count_of_bikes]), -[Parameters].[Parameter 2]+1, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_425308717233623048]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
      </column>
      <column caption='Min Month' datatype='date' name='[Calculation_425308717239504905]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{MIN(IF [Moving Average Period Set]THEN [Calculation_425308717233623048] END )}' />
      </column>
      <column caption='Feels Like Temperature' datatype='real' name='[Feels_Like_Temperature]' role='measure' type='quantitative' />
      <column caption='Humidity Percentage' datatype='real' name='[Humidity_Percentage]' role='measure' type='quantitative' />
      <column caption='Max Month' datatype='date' name='[Min Month (copy)_425308717240668170]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{MAX(IF [Moving Average Period Set]THEN [Calculation_425308717233623048] END )}' />
      </column>
      <column caption='In Range' datatype='boolean' datatype-customized='true' name='[Moving Average Period (copy)_425308717245661196]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_425308717233623048]&gt;= [Calculation_425308717239504905]&#13;&#10;AND&#13;&#10;[Calculation_425308717233623048]&lt;=[Min Month (copy)_425308717240668170]' />
      </column>
      <column caption='In Range Rides' datatype='integer' name='[Moving Average Rides (copy)_425308717319241741]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{SUM(INT([Moving Average Period (copy)_425308717245661196])*[count_of_bikes])}' />
      </column>
      <column aggregation='None' caption='Temp C' datatype='integer' name='[Real Temperature (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[Real_Temperature]' peg='0' size='2.44' />
      </column>
      <column caption='Real Temperature' datatype='real' name='[Real_Temperature]' role='measure' type='quantitative' />
      <column datatype='string' name='[Weather]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Wind Kph' datatype='integer' name='[Wind Speed kph (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[Wind_Speed_kph]' peg='0' size='3.43' />
      </column>
      <column caption='Wind Speed kph' datatype='real' name='[Wind_Speed_kph]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_9791E6FB86094462BDCD47003BF8B87F]' role='measure' type='quantitative' />
      <column caption='Count Of Bikes' datatype='integer' name='[count_of_bikes]' role='measure' type='quantitative' />
      <column caption='Is Holiday' datatype='integer' name='[is_holiday]' role='measure' type='quantitative' />
      <column caption='Is Weekend' datatype='integer' name='[is_weekend]' role='measure' type='quantitative' />
      <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column-instance column='[Moving Average Period (copy)_425308717245661196]' derivation='Attribute' name='[attr:Moving Average Period (copy)_425308717245661196:nk]' pivot='key' type='nominal' />
      <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Weather]' derivation='None' name='[none:Weather:nk]' pivot='key' type='nominal' />
      <group caption='Moving Average Period Set' name='[Moving Average Period Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='#2016-04-21#' function='range' level='[Calculation_425308717233623048]' to='#2016-08-04#' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group caption='Tooltip (Min Month,Max Month,Temp C,Wind Kph)' hidden='true' name='[Tooltip (Min Month,Max Month,Temp C,Wind Kph)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_425308717239504905]' />
          <groupfilter function='level-members' level='[Min Month (copy)_425308717240668170]' />
          <groupfilter function='level-members' level='[Real Temperature (bin)]' />
          <groupfilter function='level-members' level='[Wind Speed kph (bin)]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Moving Average Period,Min Month,Max Month)' hidden='true' name='[Tooltip (Moving Average Period,Min Month,Max Month)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_425308717233623048]' />
          <groupfilter function='level-members' level='[Calculation_425308717239504905]' />
          <groupfilter function='level-members' level='[Min Month (copy)_425308717240668170]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:Moving Average Period (copy)_425308717245661196:nk]' type='palette'>
            <map to='#005500'>
              <bucket>true</bucket>
            </map>
            <map to='#aa00ff'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[hr:time:ok]' type='palette'>
            <map to='#499894'>
              <bucket>8</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>20</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#79706e'>
              <bucket>12</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>9</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>18</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>21</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>16</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>6</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>13</bucket>
            </map>
            <map to='#d37295'>
              <bucket>14</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>17</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>7</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>22</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>15</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>23</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Weather:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Broken Clouds&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rain with thunderstorm&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Rain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snowfall&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cloudy&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Scattered Clouds&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clear&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
          <calculation class='tableau' formula='&quot;day&quot;' />
        </column>
        <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='2'>
          <calculation class='tableau' formula='2' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data' id='Data_9791E6FB86094462BDCD47003BF8B87F'>
            <properties context=''>
              <relation connection='excel-direct.1sp26i31h2ny7i1dsr5lp1btl1hc' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
                  <column datatype='integer' name='count_of_bikes' ordinal='2' />
                  <column datatype='real' name='Real_Temperature' ordinal='3' />
                  <column datatype='real' name='Feels_Like_Temperature' ordinal='4' />
                  <column datatype='real' name='Humidity_Percentage' ordinal='5' />
                  <column datatype='real' name='Wind_Speed_kph' ordinal='6' />
                  <column datatype='string' name='Weather' ordinal='7' />
                  <column datatype='integer' name='is_holiday' ordinal='8' />
                  <column datatype='integer' name='is_weekend' ordinal='9' />
                  <column datatype='string' name='Season' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <edit-group-action caption='Update Moving Average Period Set' name='[Action1_88964E8EB7DD4321969F38871A5C17E9]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Moving Average' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='do-nothing' />
        <param name='target-group' value='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[Moving Average Period Set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='HeatMap'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#005500'>Temperature vs Wind Speed between </run>
            <run fontcolor='#005500' fontsize='12'><![CDATA[<[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717239504905:qk]> and <[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Min Month (copy)_425308717240668170:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.13icwq50b7cei81c8ef1l1w7gh9c' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13icwq50b7cei81c8ef1l1w7gh9c'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_425308717233623048]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_425308717239504905]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MIN(IF [Moving Average Period Set]THEN [Calculation_425308717233623048] END )}' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_425308717240668170]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX(IF [Moving Average Period Set]THEN [Calculation_425308717233623048] END )}' />
            </column>
            <column caption='In Range' datatype='boolean' datatype-customized='true' name='[Moving Average Period (copy)_425308717245661196]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_425308717233623048]&gt;= [Calculation_425308717239504905]&#13;&#10;AND&#13;&#10;[Calculation_425308717233623048]&lt;=[Min Month (copy)_425308717240668170]' />
            </column>
            <column aggregation='None' caption='Temp C' datatype='integer' name='[Real Temperature (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[Real_Temperature]' peg='0' size='2.44' />
            </column>
            <column caption='Real Temperature' datatype='real' name='[Real_Temperature]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Wind Kph' datatype='integer' name='[Wind Speed kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[Wind_Speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Wind Speed kph' datatype='real' name='[Wind_Speed_kph]' role='measure' type='quantitative' />
            <column caption='Count Of Bikes' datatype='integer' name='[count_of_bikes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_425308717239504905]' derivation='None' name='[none:Calculation_425308717239504905:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_425308717240668170]' derivation='None' name='[none:Min Month (copy)_425308717240668170:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Moving Average Period (copy)_425308717245661196]' derivation='None' name='[none:Moving Average Period (copy)_425308717245661196:nk]' pivot='key' type='nominal' />
            <column-instance column='[Real Temperature (bin)]' derivation='None' name='[none:Real Temperature (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Wind Speed kph (bin)]' derivation='None' name='[none:Wind Speed kph (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[count_of_bikes]' derivation='Sum' name='[sum:count_of_bikes:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Moving Average Period (copy)_425308717245661196:nk]'>
            <groupfilter function='member' level='[none:Moving Average Period (copy)_425308717245661196:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Moving Average Period (copy)_425308717245661196:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Real Temperature (bin):ok]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Wind Speed kph (bin):ok]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[sum:count_of_bikes:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e5dce4</color>
                <color>#d9c9d8</color>
                <color>#cdb6cc</color>
                <color>#c2a4c0</color>
                <color>#b693b4</color>
                <color>#aa83a8</color>
                <color>#9f749c</color>
                <color>#936690</color>
                <color>#875984</color>
                <color>#7c4d79</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f2f2f2' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='background-color' id='refline2' value='#f7f1f67f' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dotted' />
            <format attr='fill-color' id='refline4' value='#f6eee3' />
            <format attr='line-visibility' id='refline6' value='on' />
            <format attr='line-pattern-only' id='refline6' value='dotted' />
            <format attr='fill-color' id='refline6' value='#fefaf1' />
            <format attr='stroke-color' id='refline6' value='#59a14f' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[sum:count_of_bikes:qk]' />
              <text column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[sum:count_of_bikes:qk]' />
              <lod column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717239504905:qk]' />
              <lod column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Min Month (copy)_425308717240668170:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#005500'><![CDATA[Temp C:	<[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Real Temperature (bin):ok]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#005500'><![CDATA[Wind Kph:	<[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Wind Speed kph (bin):ok]>]]></run>
                <run><![CDATA[

<Sheet name="Weather" maxwidth="300" maxheight="200" filter="<All Fields>">
<Sheet name="Hour" maxwidth="300" maxheight="400" filter="<All Fields>">
]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[sum:count_of_bikes:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern-only' value='solid' />
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Real Temperature (bin):ok]</rows>
        <cols>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Wind Speed kph (bin):ok]</cols>
        <show-full-range>
          <column>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[Real Temperature (bin)]</column>
          <column>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[Wind Speed kph (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{7738144B-D17B-47DC-8BD8-05392CF288BF}' />
    </worksheet>
    <worksheet name='Hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.13icwq50b7cei81c8ef1l1w7gh9c' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13icwq50b7cei81c8ef1l1w7gh9c'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_425308717233623048]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_425308717239504905]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MIN(IF [Moving Average Period Set]THEN [Calculation_425308717233623048] END )}' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_425308717240668170]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX(IF [Moving Average Period Set]THEN [Calculation_425308717233623048] END )}' />
            </column>
            <column caption='In Range' datatype='boolean' datatype-customized='true' name='[Moving Average Period (copy)_425308717245661196]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_425308717233623048]&gt;= [Calculation_425308717239504905]&#13;&#10;AND&#13;&#10;[Calculation_425308717233623048]&lt;=[Min Month (copy)_425308717240668170]' />
            </column>
            <column aggregation='None' caption='Temp C' datatype='integer' name='[Real Temperature (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[Real_Temperature]' peg='0' size='2.44' />
            </column>
            <column caption='Real Temperature' datatype='real' name='[Real_Temperature]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Wind Kph' datatype='integer' name='[Wind Speed kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[Wind_Speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Wind Speed kph' datatype='real' name='[Wind_Speed_kph]' role='measure' type='quantitative' />
            <column caption='Count Of Bikes' datatype='integer' name='[count_of_bikes]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_425308717239504905]' derivation='None' name='[none:Calculation_425308717239504905:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_425308717240668170]' derivation='None' name='[none:Min Month (copy)_425308717240668170:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Moving Average Period (copy)_425308717245661196]' derivation='None' name='[none:Moving Average Period (copy)_425308717245661196:nk]' pivot='key' type='nominal' />
            <column-instance column='[count_of_bikes]' derivation='Sum' name='[sum:count_of_bikes:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[Tooltip (Min Month,Max Month,Temp C,Wind Kph)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hour]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_425308717239504905]' />
              <groupfilter function='level-members' level='[Min Month (copy)_425308717240668170]' />
              <groupfilter function='level-members' level='[Real Temperature (bin)]' />
              <groupfilter function='level-members' level='[Wind Speed kph (bin)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[Tooltip (Moving Average Period,Min Month,Max Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hour]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_425308717233623048]' />
              <groupfilter function='level-members' level='[Calculation_425308717239504905]' />
              <groupfilter function='level-members' level='[Min Month (copy)_425308717240668170]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Moving Average Period (copy)_425308717245661196:nk]'>
            <groupfilter function='member' level='[none:Moving Average Period (copy)_425308717245661196:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Moving Average Period (copy)_425308717245661196:nk]</column>
            <column>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[Tooltip (Moving Average Period,Min Month,Max Month)]</column>
            <column>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[Tooltip (Min Month,Max Month,Temp C,Wind Kph)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[sum:count_of_bikes:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f2f2f2' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='background-color' id='refline2' value='#f7f1f67f' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dotted' />
            <format attr='fill-color' id='refline4' value='#f6eee3' />
            <format attr='line-visibility' id='refline6' value='on' />
            <format attr='line-pattern-only' id='refline6' value='dotted' />
            <format attr='fill-color' id='refline6' value='#fefaf1' />
            <format attr='stroke-color' id='refline6' value='#59a14f' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[hr:time:ok]' />
              <text column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[sum:count_of_bikes:qk]' />
              <lod column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717239504905:qk]' />
              <lod column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Min Month (copy)_425308717240668170:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#005500'>&lt;</run>
                <run bold='true' fontcolor='#005500'>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[sum:count_of_bikes:qk]</run>
                <run bold='true' fontcolor='#005500'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern-only' value='solid' />
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[hr:time:ok]</rows>
        <cols>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[sum:count_of_bikes:qk]</cols>
      </table>
      <simple-id uuid='{D39311C3-8569-40F0-9770-EC883E235450}' />
    </worksheet>
    <worksheet name='Moving Average'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#005500'>&lt;</run>
            <run bold='true' fontcolor='#005500'>[Parameters].[Parameter 2]</run>
            <run bold='true' fontcolor='#005500'>&gt;&lt;</run>
            <run bold='true' fontcolor='#005500'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontcolor='#005500'>&gt; moving average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.13icwq50b7cei81c8ef1l1w7gh9c' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
            <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='2'>
              <calculation class='tableau' formula='2' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13icwq50b7cei81c8ef1l1w7gh9c'>
            <column caption='Moving Average Rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([count_of_bikes]), -[Parameters].[Parameter 2]+1, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_425308717233623048]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_425308717239504905]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MIN(IF [Moving Average Period Set]THEN [Calculation_425308717233623048] END )}' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_425308717240668170]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX(IF [Moving Average Period Set]THEN [Calculation_425308717233623048] END )}' />
            </column>
            <column caption='In Range' datatype='boolean' datatype-customized='true' name='[Moving Average Period (copy)_425308717245661196]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_425308717233623048]&gt;= [Calculation_425308717239504905]&#13;&#10;AND&#13;&#10;[Calculation_425308717233623048]&lt;=[Min Month (copy)_425308717240668170]' />
            </column>
            <column-instance column='[Moving Average Period (copy)_425308717245661196]' derivation='Attribute' name='[attr:Moving Average Period (copy)_425308717245661196:nk]' pivot='key' type='nominal' />
            <column caption='Count Of Bikes' datatype='integer' name='[count_of_bikes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_425308717233623048]' derivation='None' name='[none:Calculation_425308717233623048:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_425308717239504905]' derivation='None' name='[none:Calculation_425308717239504905:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_425308717240668170]' derivation='None' name='[none:Min Month (copy)_425308717240668170:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717233623048:qk]' included-values='in-range'>
            <min>#2015-01-04#</min>
            <max>#2017-01-03#</max>
          </filter>
          <slices>
            <column>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717233623048:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[usr:Calculation1:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717233623048:qk]' scope='cols' value='' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f2f2f2' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='background-color' id='refline2' value='#f7f1f67f' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dotted' />
            <format attr='fill-color' id='refline4' value='#f6eee3' />
            <format attr='line-visibility' id='refline6' value='on' />
            <format attr='line-pattern-only' id='refline6' value='dotted' />
            <format attr='fill-color' id='refline6' value='#fefaf1' />
            <format attr='stroke-color' id='refline6' value='#59a14f' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='border-style' value='dotted' />
            <format attr='border-color' value='#005500' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='center' />
            <format attr='color' value='#005500' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[attr:Moving Average Period (copy)_425308717245661196:nk]' />
              <lod column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Min Month (copy)_425308717240668170:qk]' />
              <lod column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717239504905:qk]' />
            </encodings>
            <reference-line axis-column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717233623048:qk]' enable-instant-analytics='true' formula='min' id='refline0' label-type='automatic' paired-id='refline1' scope='per-pane' symmetric='false' value-column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717233623048:qk]' z-order='1' />
            <reference-line axis-column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717233623048:qk]' enable-instant-analytics='true' formula='max' id='refline1' label-type='automatic' paired-id='refline0' scope='per-pane' symmetric='false' value-column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717233623048:qk]' z-order='2' />
            <reference-line axis-column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[usr:Calculation1:qk]' enable-instant-analytics='true' formula='min' id='refline2' label-type='automatic' paired-id='refline3' scope='per-pane' symmetric='false' value-column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[usr:Calculation1:qk]' z-order='3' />
            <reference-line axis-column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[usr:Calculation1:qk]' enable-instant-analytics='true' formula='max' id='refline3' label-type='automatic' paired-id='refline2' scope='per-pane' symmetric='false' value-column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[usr:Calculation1:qk]' z-order='4' />
            <reference-line axis-column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717233623048:qk]' enable-instant-analytics='true' formula='min' id='refline4' label-type='none' paired-id='refline5' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717239504905:qk]' z-order='5' />
            <reference-line axis-column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717233623048:qk]' enable-instant-analytics='true' formula='max' id='refline5' label-type='none' paired-id='refline4' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Min Month (copy)_425308717240668170:qk]' z-order='6' />
            <reference-line axis-column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717233623048:qk]' enable-instant-analytics='false' formula='min' id='refline6' label-type='none' paired-id='refline7' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717239504905:qk]' z-order='7' />
            <reference-line axis-column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717233623048:qk]' enable-instant-analytics='false' formula='max' id='refline7' label-type='none' paired-id='refline6' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Min Month (copy)_425308717240668170:qk]' z-order='8' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#005500'><![CDATA[Date:<[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717233623048:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#005500'><![CDATA[Moving Average Rides:	<[federated.13icwq50b7cei81c8ef1l1w7gh9c].[usr:Calculation1:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Weather" maxwidth="300" maxheight="200" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Hour" maxwidth="300" maxheight="400" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='trendline'>
                <format attr='line-pattern-only' value='solid' />
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[usr:Calculation1:qk]</rows>
        <cols>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717233623048:qk]</cols>
      </table>
      <simple-id uuid='{648D07E6-D782-488F-9751-C59A727F1D6A}' />
    </worksheet>
    <worksheet name='TotalRides'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#005500'>London Bike Rides</run>
            <run>Æ&#10;</run>
            <run fontcolor='#005500' fontsize='11'><![CDATA[between <[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717239504905:qk]> and <[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Min Month (copy)_425308717240668170:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.13icwq50b7cei81c8ef1l1w7gh9c' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13icwq50b7cei81c8ef1l1w7gh9c'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_425308717233623048]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_425308717239504905]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MIN(IF [Moving Average Period Set]THEN [Calculation_425308717233623048] END )}' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_425308717240668170]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX(IF [Moving Average Period Set]THEN [Calculation_425308717233623048] END )}' />
            </column>
            <column caption='In Range' datatype='boolean' datatype-customized='true' name='[Moving Average Period (copy)_425308717245661196]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_425308717233623048]&gt;= [Calculation_425308717239504905]&#13;&#10;AND&#13;&#10;[Calculation_425308717233623048]&lt;=[Min Month (copy)_425308717240668170]' />
            </column>
            <column caption='In Range Rides' datatype='integer' name='[Moving Average Rides (copy)_425308717319241741]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{SUM(INT([Moving Average Period (copy)_425308717245661196])*[count_of_bikes])}' />
            </column>
            <column caption='Count Of Bikes' datatype='integer' name='[count_of_bikes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_425308717239504905]' derivation='None' name='[none:Calculation_425308717239504905:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_425308717240668170]' derivation='None' name='[none:Min Month (copy)_425308717240668170:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Moving Average Period (copy)_425308717245661196]' derivation='None' name='[none:Moving Average Period (copy)_425308717245661196:nk]' pivot='key' type='nominal' />
            <column-instance column='[Moving Average Rides (copy)_425308717319241741]' derivation='Sum' name='[sum:Moving Average Rides (copy)_425308717319241741:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Moving Average Period (copy)_425308717245661196:nk]'>
            <groupfilter function='member' level='[none:Moving Average Period (copy)_425308717245661196:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Moving Average Period (copy)_425308717245661196:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f2f2f2' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='background-color' id='refline2' value='#f7f1f67f' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dotted' />
            <format attr='fill-color' id='refline4' value='#f6eee3' />
            <format attr='line-visibility' id='refline6' value='on' />
            <format attr='line-pattern-only' id='refline6' value='dotted' />
            <format attr='fill-color' id='refline6' value='#fefaf1' />
            <format attr='stroke-color' id='refline6' value='#59a14f' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[sum:Moving Average Rides (copy)_425308717319241741:qk]' />
              <lod column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Min Month (copy)_425308717240668170:qk]' />
              <lod column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717239504905:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontcolor='#005500' fontsize='36'>&lt;</run>
                <run fontcolor='#005500' fontsize='36'>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[sum:Moving Average Rides (copy)_425308717319241741:qk]</run>
                <run fontcolor='#005500' fontsize='36'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern-only' value='solid' />
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1E0996CE-9BBD-4311-9404-D38776440052}' />
    </worksheet>
    <worksheet name='Weather'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.13icwq50b7cei81c8ef1l1w7gh9c' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13icwq50b7cei81c8ef1l1w7gh9c'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_425308717233623048]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_425308717239504905]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MIN(IF [Moving Average Period Set]THEN [Calculation_425308717233623048] END )}' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_425308717240668170]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX(IF [Moving Average Period Set]THEN [Calculation_425308717233623048] END )}' />
            </column>
            <column caption='In Range' datatype='boolean' datatype-customized='true' name='[Moving Average Period (copy)_425308717245661196]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_425308717233623048]&gt;= [Calculation_425308717239504905]&#13;&#10;AND&#13;&#10;[Calculation_425308717233623048]&lt;=[Min Month (copy)_425308717240668170]' />
            </column>
            <column aggregation='None' caption='Temp C' datatype='integer' name='[Real Temperature (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[Real_Temperature]' peg='0' size='2.44' />
            </column>
            <column caption='Real Temperature' datatype='real' name='[Real_Temperature]' role='measure' type='quantitative' />
            <column datatype='string' name='[Weather]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Wind Kph' datatype='integer' name='[Wind Speed kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[Wind_Speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Wind Speed kph' datatype='real' name='[Wind_Speed_kph]' role='measure' type='quantitative' />
            <column caption='Count Of Bikes' datatype='integer' name='[count_of_bikes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_425308717239504905]' derivation='None' name='[none:Calculation_425308717239504905:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_425308717240668170]' derivation='None' name='[none:Min Month (copy)_425308717240668170:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Moving Average Period (copy)_425308717245661196]' derivation='None' name='[none:Moving Average Period (copy)_425308717245661196:nk]' pivot='key' type='nominal' />
            <column-instance column='[Weather]' derivation='None' name='[none:Weather:nk]' pivot='key' type='nominal' />
            <column-instance column='[count_of_bikes]' derivation='Sum' name='[sum:count_of_bikes:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[Tooltip (Min Month,Max Month,Temp C,Wind Kph)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_425308717239504905]' />
              <groupfilter function='level-members' level='[Min Month (copy)_425308717240668170]' />
              <groupfilter function='level-members' level='[Real Temperature (bin)]' />
              <groupfilter function='level-members' level='[Wind Speed kph (bin)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[Tooltip (Moving Average Period,Min Month,Max Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_425308717233623048]' />
              <groupfilter function='level-members' level='[Calculation_425308717239504905]' />
              <groupfilter function='level-members' level='[Min Month (copy)_425308717240668170]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Moving Average Period (copy)_425308717245661196:nk]'>
            <groupfilter function='member' level='[none:Moving Average Period (copy)_425308717245661196:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Weather:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[sum:count_of_bikes:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Moving Average Period (copy)_425308717245661196:nk]</column>
            <column>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[Tooltip (Moving Average Period,Min Month,Max Month)]</column>
            <column>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[Tooltip (Min Month,Max Month,Temp C,Wind Kph)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[sum:count_of_bikes:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f2f2f2' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='background-color' id='refline2' value='#f7f1f67f' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dotted' />
            <format attr='fill-color' id='refline4' value='#f6eee3' />
            <format attr='line-visibility' id='refline6' value='on' />
            <format attr='line-pattern-only' id='refline6' value='dotted' />
            <format attr='fill-color' id='refline6' value='#fefaf1' />
            <format attr='stroke-color' id='refline6' value='#59a14f' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Weather:nk]' />
              <text column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[sum:count_of_bikes:qk]' />
              <lod column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717239504905:qk]' />
              <lod column='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Min Month (copy)_425308717240668170:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#005500'>&lt;</run>
                <run bold='true' fontcolor='#005500'>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[sum:count_of_bikes:qk]</run>
                <run bold='true' fontcolor='#005500'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern-only' value='solid' />
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Weather:nk]</rows>
        <cols>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[sum:count_of_bikes:qk]</cols>
      </table>
      <simple-id uuid='{02A81BBE-7C08-4956-9916-9FA1A560B596}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e9ebe0' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='background-color' value='#00000000' />
          <format attr='border-color' value='#005500' />
          <format attr='border-width' value='1' />
          <format attr='border-style' value='dotted' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='color' value='#005500' />
          <format attr='font-weight' value='bold' />
          <format attr='text-align' value='center' />
          <format attr='font-size' value='8' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Data (london_bikes_final)' name='federated.13icwq50b7cei81c8ef1l1w7gh9c' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
          <calculation class='tableau' formula='&quot;day&quot;' />
          <members>
            <member value='&quot;day&quot;' />
            <member value='&quot;week&quot;' />
            <member value='&quot;month&quot;' />
          </members>
        </column>
        <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='2'>
          <calculation class='tableau' formula='2' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.13icwq50b7cei81c8ef1l1w7gh9c'>
        <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_425308717233623048]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
        </column>
        <column-instance column='[Calculation_425308717233623048]' derivation='None' name='[none:Calculation_425308717233623048:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='15' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='13' type-v2='layout-basic' w='98828' x='586' y='1042'>
              <zone h='47135' id='8' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='47135' id='6' type-v2='layout-basic' w='98828' x='586' y='1042'>
                  <zone h='47135' id='3' name='TotalRides' w='28623' x='586' y='1042'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='padding' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='47135' id='5' name='Moving Average' w='70205' x='29209' y='1042'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='padding' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='50781' id='11' name='HeatMap' w='98828' x='586' y='48177'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='padding' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7031' id='10' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='13836' x='68814' y='1823' />
        <zone h='7031' id='9' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='15227' x='53807' y='1823' />
        <zone h='3906' id='12' type-v2='text' w='29502' x='62958' y='51172'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e15759' underline='true'>Drag and hold to select time period on timeline</run>
          </formatted-text>
        </zone>
        <zone h='9896' id='16' name='Moving Average' param='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717233623048:qk]' type-v2='filter' values='database' w='17057' x='82650' y='781' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='19' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='47135' id='3' is-fixed='true' name='TotalRides' w='28623' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9896' id='16' name='Moving Average' param='[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717233623048:qk]' type-v2='filter' values='database' w='17057' x='82650' y='781'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47135' id='5' is-fixed='true' name='Moving Average' w='70205' x='29209' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7031' id='9' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='15227' x='53807' y='1823'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7031' id='10' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='13836' x='68814' y='1823'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50781' id='11' is-fixed='true' name='HeatMap' w='98828' x='586' y='48177'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3906' id='12' type-v2='text' w='29502' x='62958' y='51172'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#e15759' underline='true'>Drag and hold to select time period on timeline</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B0D358ED-2BA0-4221-8FAE-38A65EAC1DE0}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Moving Average'>
      <cards>
        <edge name='left'>
          <strip size='120'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[attr:Moving Average Period (copy)_425308717245661196:nk]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717233623048:ok]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717233623048:qk]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717239504905:qk]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Min Month (copy)_425308717240668170:qk]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Weather:nk]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[yr:Calculation_425308717233623048:ok]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[yr:Min Month (copy)_425308717240668170:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17371D48-EEB1-48D5-84A9-78EED559F0EE}' />
    </window>
    <window class='worksheet' name='TotalRides'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717239504905:qk]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Min Month (copy)_425308717240668170:qk]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Moving Average Period (copy)_425308717245661196:nk]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[yr:Min Month (copy)_425308717240668170:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EED7ADCE-F4BB-49BC-9091-9B7F0F527AC5}' />
    </window>
    <window class='worksheet' name='HeatMap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717239504905:qk]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Min Month (copy)_425308717240668170:qk]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Moving Average Period (copy)_425308717245661196:nk]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Real Temperature (bin):ok]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Wind Speed kph (bin):ok]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[yr:Calculation_425308717239504905:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{663D3485-1B06-452C-8EFA-B9362C5C3CEE}' />
    </window>
    <window class='worksheet' name='Weather'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717239504905:qk]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Min Month (copy)_425308717240668170:qk]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Moving Average Period (copy)_425308717245661196:nk]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Weather:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AC5BAE5-EC80-497A-B442-2423BCEE5813}' />
    </window>
    <window class='worksheet' name='Hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[hr:time:ok]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Calculation_425308717239504905:qk]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Min Month (copy)_425308717240668170:qk]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[none:Moving Average Period (copy)_425308717245661196:nk]</field>
            <field>[federated.13icwq50b7cei81c8ef1l1w7gh9c].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE0599E3-B063-4BEA-B1AB-D7897CF6EC80}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='HeatMap'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Moving Average'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TotalRides'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{4CD54EAA-F1D9-4B47-8EB5-39B97CE593BA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='HeatMap' width='192'>
      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
      JgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Hour' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Moving Average' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='104' name='TotalRides' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weather' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
